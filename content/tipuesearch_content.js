var tipuesearch = {"pages": [{'title': '每週內容', 'text': '', 'tags': '', 'url': '每週內容.html'}, {'title': 'W1~W5', 'text': '隨身系統之建立 \n (1)下載安裝Python3.8.2至電腦，從電腦C槽中複製Python38資料夾至隨身系統之data目錄下， 解除電腦系統中之 Python。 \n (2)下載 Scite.exe編輯器並將資料夾移至隨身系統下之data目錄下，將SciTEGlobal.properties檔案中的code.page = 0修改為code.page = 65001，如此一來就可以更方便的打開內涵中文字的程式了，最後利用SciTE建立stop.bat與start.bat如下: \n \n \n (3) 利用get-pip.py在先前完成之隨身系統中安裝pip，利用pip指令python -m pip install flask lxml bs4 flask-cors Markdown pelican leo 安裝 flask lxml\xa0beautifulsoup4 flask-cors Markdown pelican 及 leo \n (4)下載msys2先安裝在Windows系統，從電腦C槽中複製msys64資料夾至隨身系統之data目錄下，並解除電腦系統中之msys2。 \n (5)設置y：\\ msys64 \\ etc \\ pacman.conf與wgetrc等兩個檔案： pacman.conf檔案部分： \n \n wgetrc檔案部分： \n \n \n \xa0# set for wcm2020 \n \xa0https_proxy = http://[2001:288:6004:17::53]:3128/ \n \xa0http_proxy = http://[2001:288:6004:17::53]:3128/ \n \xa0ftp_proxy =  http://[2001:288:6004:17::53]:3128/ \n \n 修改完成後，重新啟動mingw64.exe，使用指令透過IPv6的proxy server進行 程序包更新： \n \n \xa0$ pacman -Syu \n \n 再安裝base-devel與gcc \n \xa0 \n \n \xa0$ pacman -S base-devel \n \xa0$ pacman -S gcc \n \n 安裝完後須修改start.bat之內容如下: \n \n \n \xa0REM 設定 msys2 64 位元的執行路徑 \n \xa0set path_msys2=%Disk%:\\msys64\\usr\\bin; \n \xa0 \n \xa0path=%Disk%:;%path_python%;%path_git%;%path_msys2%; \n \n 安裝make: \n \n \xa0$ pacman -S make \n \n 處理完MSYS環境中的gcc之後，為了建立Windows 64位元環境下的gcc編譯環境，接下來要在先前尚未處理的MSYS環境下的版本中，安裝mingw-w64-x86_64-gcc與mingw-w64- x86_64-toolchain，下載初步尚未安裝任何gcc版本的可移植MSYS2系統，然後安裝gcc與toolchain： \n \n \n \xa0$ pacman -S mingw-w64-x86_64-gcc \n \xa0 \n \xa0$ pacman -S mingw-w64-x86_64-toolchain \n \n \n 之後就可以修改start.bat啟動路徑為： \n \n \xa0REM 設定 msys2 64 位元的執行路徑 \n \xa0set path_msys2=%Disk%:\\msys64\\mingw64\\bin; \n \xa0 \n \xa0path=%Disk%:;%path_python%;%path_git%;%path_msys2%; \n \n 後利用此一mingw-w64-x86_64-gcc編譯放置tmp的Scintilla與Scite，只要分別進入win32目錄，然後執行make指令： \n \n \xa0$ mingw32-make \n \n 完成後，測試編譯以下簡單的C程序： \n \n \n \xa0// hello.c \n \xa0#include <stdio.h> \n \xa0 \n \xa0int   main() { \n \xa0 \xa0 \xa0 printf ( "Hello, world!\\n" ); \n \xa0 \xa0 \xa0 return   0; \n \xa0} \n \n 將此檔案存在tmp \\ c_ex目錄下，命名為hello.c 然後利用： \n \n \xa0gcc -o hello.exe hello.c \n \n \n 完成後將輸出一個hello.exe \n (6)安裝PortableGit於隨身系統。 \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W1~W5.html'}, {'title': 'W6', 'text': '因應疫情的影響，後續可能需要改由線上教學，須自行準備web cam \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': 'Youtube live+OBS串流、Google meet 線上教學 小組網站建立、使用SSH推送更新網頁 \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '組長與老師開會，組員透過live streaming觀看討論過程。 \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W9~W10', 'text': 'Python and Flask \n 測試使用Python程式取出表單中學號以及對應成績 \n \n 基本Flask \n \n 以此為基本再進行延伸。 \n \n', 'tags': '', 'url': 'W9~W10.html'}, {'title': 'W11~W13', 'text': '建立虛擬主機 \n 前面步驟為安裝設定重點為ipv4及ipv6網路設定都為自動 \n 進入介面後，再輸入指令 \n \n \n \n \n \n \n 1 \n \n \n \n sudo vi 00-installer-config.yaml \n \n \n \n \n \n \xa0 輸入指令 \n \n \n \n \n \n \n 1 \n \n \n \n sudo netplan apply \n \n \n \n \n \n \n \n \n \n \n \n \n \n 1 \n \n \n \n ping4 140.130.15.254 \n \n \n \n \n \n \n \n 網路部分設定完成 \n 安裝pip3 \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt install net-tools \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt update \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt install python3-pip \n \n \n \n \n \n \n \n 利用pip3安裝flask flask_cors bs4 lxml markdown \n \n \n \n \n \n \n 1 \n \n \n \n sudo\xa0pip3 install\xa0flask flask_cors bs4 lxml markdown \n \n \n \n \n \n \n \n 建立github資料夾 \n \n \n \n \n \n \n 1 \n \n \n \n mkdir github \n \n \n \n \n \n \n \n 安裝桌面 \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt install xorg \n \n \n \n \n \n \n \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt install fluxbox \n \n \n \n \n \n \n \n \n \n \n \n \n \n 1 \n \n \n \n sudo apt install lxde \n \n \n \n \n \n \n \n 重開虛擬主機 \n \n \n', 'tags': '', 'url': 'W11~W13.html'}, {'title': 'W14', 'text': 'MBR與GPT磁碟分割之差異 \n MBR:MBR為Master Boot Record Boot Record的縮寫，為1983年由IBM公司所提出的分割表格式。 \n 位於硬碟開始部份的一個特殊磁區，內含系統載入器及硬碟邏輯分割區資訊。啟動系統時會從磁區內使用代碼來啟動系統，若MBR之啟動資訊損壞，則系統無法正常啟動。 \n MBR只能用於最大容量為2TB的硬碟，如果使用超過2TB之硬碟，多出來的部分將無法被辨識。MBR最多只支援將硬碟設定為四個主要磁碟分割。 \n 使用MBR啟動電腦時，將先啟動主機板之BIOS，隨後BIOS載入MBR，最後MBR啟動系統。 \n GPT:GPT為GUID Partition Tableartition Table的縮寫，其更加符合現代需求，故成為逐漸取代MBR的新標準。GPT最凸顯的優勢在於它突破了MBR最大只支援2T硬碟的限制，同時使用者可以將硬碟劃分數量不限的分割槽，雖然Windows只允許GPT硬碟上最多有128個分區，但128個分區基本上已經能滿足所有人群的使用需求。 \n 另外，GPT並不會把引導資料都存儲在一個位置，從資訊安全的角度來看比MBR更加優秀。 \n', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': '利用Pypdf2切割pdf檔 \n 切割PDF之.py程式檔 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n \n \n \n # pypdf2_ex1.py \n import os \n from PyPDF2 import PdfFileWriter, PdfFileReader \n \xa0\xa0\xa0 \xa0 \n pdfReader = PdfFileReader(open("2002_Book_Real-WorldASPNETBuildingAConte.pdf", "rb")) \n information = [("WhatIsCMS",18,45)] \n \xa0\xa0\xa0 \xa0 \n for page in range(len(information)): \n \xa0\xa0\xa0\xa0 pdf_writer = PdfFileWriter() \n \xa0\xa0\xa0\xa0 start = information[page][1] \n \xa0\xa0\xa0\xa0 end = information[page][2] \n \xa0\xa0\xa0\xa0 while start<=end: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.addPage(pdfReader.getPage(start-1)) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 start+=1 \n \xa0\xa0\xa0\xa0 if not os.path.exists("./"): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 os.makedirs(savepath) \n \xa0\xa0\xa0\xa0 output_filename = \'{}_{}_page_{}.pdf\'.format(information[page][0],information[page][1], information[page][2]) \n \xa0\xa0\xa0\xa0 with open(output_filename,\'wb\') as out: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.write(out) \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W15.html'}, {'title': 'W16~W17', 'text': '利用pypdf2擷取pdf與合併pdf的程式，並利用API放上動態網站測試。 \n 利用pypdf2擷取出3個pdf檔 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n \n \n \n # pypdf2_ex2.py \n import os \n from PyPDF2 import PdfFileWriter, PdfFileReader \n \xa0 \xa0 \n pdfReader = PdfFileReader(open("2019_Book_PracticalFlutter.pdf", "rb")) \n information = [("GitAndGithub",16,26),("GitAndGithub",36,46),("GitAndGithub",196,289)] \n \xa0 \xa0 \n for page in range(len(information)): \n \xa0\xa0\xa0\xa0 pdf_writer = PdfFileWriter() \n \xa0\xa0\xa0\xa0 start = information[page][1] \n \xa0\xa0\xa0\xa0 end = information[page][2] \n \xa0\xa0\xa0\xa0 while start<=end: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.addPage(pdfReader.getPage(start-1)) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 start+=1 \n \xa0\xa0\xa0\xa0 if not os.path.exists("./"): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 os.makedirs(savepath) \n \xa0\xa0\xa0\xa0 output_filename = \'{}_{}_page_{}.pdf\'.format(information[page][0],information[page][1], information[page][2]) \n \xa0\xa0\xa0\xa0 with open(output_filename,\'wb\') as out: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.write(out) \n \n \n \n \n \n \n \n 再使用以下程式合併成一個pdf檔 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n \n \n \n # pypdf2_ex3.py \n # merge several pdf files \n import sys \n import PyPDF2 \n \xa0 \n pdf_write_object = PyPDF2.PdfFileWriter() \n \xa0 \n #for i in sys.argv[1:]: \n for i in ["GitAndGithub_16_page_26.pdf","GitAndGithub_36_page_46.pdf","GitAndGithub_196_page_289.pdf"]: \n pdf_read_object = PyPDF2.PdfFileReader(i) \n print(\'processing file : \'+ i + \'number of pages : \' + str(pdf_read_object.numPages)) \n for page in range(pdf_read_object.numPages): \n pdf_write_object.addPage(pdf_read_object.getPage(page)) \n \xa0 \n final_file_object = open(\'2020CMS.pdf\', \'wb\') \n pdf_write_object.write(final_file_object) \n final_file_object.close() \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W16~W17.html'}, {'title': 'ssh key\xa0 設定', 'text': '利用隨身系統輸入指令sh \n 輸入指令ssh-keygen -t rsa -b 4096 -C "學號" \n 預設之金鑰儲存在y:\\home\\.ssh目錄裡 \n \n 使用puttygen將private key(id_rsa)導入，並轉換為putty能夠讀懂的格式(.ppk)檔案 \n \n \n \n', 'tags': '', 'url': 'ssh key\xa0 設定.html'}, {'title': 'putty\xa0 設定', 'text': '\n \n 之後要回到Session中按下save存檔 \n \n 進入Y:\\tmp\\wcm2020\\.git內修改config檔案 \n 修改完成後變為: \n \n', 'tags': '', 'url': 'putty\xa0 設定.html'}, {'title': '利用@gm帳號建立blogger', 'text': '使用google搜尋blogger \n \n 選擇學校@gm帳號 \n \n 建立網址 \n \n 給予網址 \n \n 給予名稱 \n \n 建立網誌 \n', 'tags': '', 'url': '利用@gm帳號建立blogger.html'}]};