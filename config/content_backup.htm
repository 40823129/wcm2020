<h1>每週內容</h1>
<h2>W1~W5</h2>
<h4>隨身系統之建立</h4>
<p>(1)下載安裝Python3.8.2至電腦，從電腦C槽中複製Python38資料夾至隨身系統之data目錄下，<span>解除電腦系統中之</span>Python。</p>
<p>(2)下載<span>Scite.exe編輯器並將資料夾移至隨身系統下之data目錄下，將SciTEGlobal.properties檔案中的code.page = 0修改為code.page = 65001，如此一來就可以更方便的打開內涵中文字的程式了，最後利用SciTE建立stop.bat與start.bat如下:</span></p>
<p><span><img alt="" height="477" src="/images/START.png" width="409"/></span></p>
<p><span><img alt="" height="191" src="/images/STOP.png" width="393"/></span></p>
<p>(3)<span>利用get-pip.py在先前完成之隨身系統中安裝pip，利用pip指令python -m pip install flask lxml bs4 flask-cors Markdown pelican leo 安裝 flask lxml beautifulsoup4 flask-cors Markdown pelican 及 leo</span></p>
<p><span>(4)下載msys2先安裝在Windows系統，從電腦C槽中複製msys64資料夾至隨身系統之data目錄下，並解除電腦系統中之msys2。</span></p>
<p><span>(5)設置y：\ msys64 \ etc \ pacman.conf與wgetrc等兩個檔案：<br/><span><span>pacman.conf檔案部分：</span></span></span></p>
<div class="line number1 index0 alt2"><code class="html plain"></code></div>
<div class="line number5 index4 alt2"><code class="html plain"><span>wgetrc檔案部分：</span></code></div>
<div class="line number5 index4 alt2"><code class="html plain"><span></span></code></div>
<div class="line number5 index4 alt2">
<div class="line number1 index0 alt2"><code class="html plain"> # set for wcm2020</code></div>
<div class="line number2 index1 alt1"><code class="html plain"> https_proxy = http://[2001:288:6004:17::53]:3128/</code></div>
<div class="line number3 index2 alt2"><code class="html plain"> http_proxy = http://[2001:288:6004:17::53]:3128/</code></div>
<div class="line number4 index3 alt1"><code class="html plain"> ftp_proxy = <a href="http://[2001:288:6004:17::53]:3128">http://[2001:288:6004:17::53]:3128/</a></code></div>
<div class="line number4 index3 alt1"><code class="html plain"></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span>修改完成後，重新啟動mingw64.exe，使用指令透過IPv6的proxy server進行</span><span>程序包更新：</span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span></span></code></div>
<div class="line number4 index3 alt1"><span> $ pacman -Syu</span></div>
<div class="line number4 index3 alt1"><span></span></div>
<div class="line number4 index3 alt1"><span>再安裝base-devel與gcc</span></div>
<div class="line number4 index3 alt1"><span></span> </div>
<div class="line number4 index3 alt1">
<div class="line number1 index0 alt2"><code class="html plain"> $ pacman -S base-devel</code></div>
<div class="line number2 index1 alt1"><code class="html plain"> $ pacman -S gcc</code></div>
<div class="line number2 index1 alt1"><code class="html plain"></code></div>
<div class="line number2 index1 alt1"><code class="html plain"><span>安裝完後須修改start.bat之內容如下:</span></code></div>
<div class="line number2 index1 alt1"><code class="html plain"><span></span></code></div>
<div class="line number2 index1 alt1">
<div class="line number1 index0 alt2"><code class="html plain"> REM 設定 msys2 64 位元的執行路徑</code></div>
<div class="line number2 index1 alt1"><code class="html plain"> set path_msys2=%Disk%:\msys64\usr\bin;</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="html plain"> path=%Disk%:;%path_python%;%path_git%;%path_msys2%;</code></div>
<div class="line number4 index3 alt1"><code class="html plain"></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span>安裝make:</span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span></span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span> $ pacman -S make</span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span></span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span>處理完MSYS環境中的gcc之後，為了建立Windows 64位元環境下的gcc編譯環境，接下來要在先前尚未處理的MSYS環境下的版本中，安裝mingw-w64-x86_64-gcc與mingw-w64- x86_64-toolchain，下載初步尚未安裝任何gcc版本的可移植MSYS2系統，然後安裝gcc與toolchain：</span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span></span></code></div>
<div class="line number4 index3 alt1">
<div class="line number1 index0 alt2"><code class="html plain"> $ pacman -S mingw-w64-x86_64-gcc</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="html plain"> $ pacman -S mingw-w64-x86_64-toolchain</code></div>
<div class="line number3 index2 alt2"><code class="html plain"></code></div>
<div class="line number3 index2 alt2">
<p><span>之後就可以修改start.bat啟動路徑為：</span></p>
<div>
<div class="line number1 index0 alt2"><code class="html plain"> REM 設定 msys2 64 位元的執行路徑</code></div>
<div class="line number2 index1 alt1"><code class="html plain"> set path_msys2=%Disk%:\msys64\mingw64\bin;</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="html plain"> path=%Disk%:;%path_python%;%path_git%;%path_msys2%;</code></div>
<div class="line number4 index3 alt1"><code class="html plain"></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span>後利用此一mingw-w64-x86_64-gcc編譯放置tmp的Scintilla與Scite，只要分別進入win32目錄，然後執行make指令：</span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span></span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span> $ mingw32-make</span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span></span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span>完成後，測試編譯以下簡單的C程序：</span></code></div>
<div class="line number4 index3 alt1"><code class="html plain"><span></span></code></div>
<div class="line number4 index3 alt1">
<div class="line number1 index0 alt2"><code class="cpp comments"> // hello.c</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor"> #include &lt;stdio.h&gt;</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="cpp color1 bold"> int</code> <code class="cpp plain">main() {</code></div>
<div class="line number5 index4 alt2"><code class="cpp spaces">     </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Hello, world!\n"</code><code class="cpp plain">);</code></div>
<div class="line number6 index5 alt1"><code class="cpp spaces">     </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number7 index6 alt2"><code class="cpp plain"> }</code></div>
<div class="line number7 index6 alt2"><code class="cpp plain"></code></div>
<div class="line number7 index6 alt2"><code class="cpp plain"><span>將此檔案存在tmp \ c_ex目錄下，命名為hello.c</span><br/><span><span>然後利用：</span></span></code></div>
<div class="line number7 index6 alt2"><code class="cpp plain"><span></span></code></div>
<div class="line number7 index6 alt2"><code class="cpp plain"><span> gcc -o hello.exe hello.c</span></code></div>
<div class="line number7 index6 alt2"><code class="cpp plain"><span></span></code></div>
<div class="line number7 index6 alt2">
<p>完成後將輸出一個hello.exe</p>
<p>(6)安裝PortableGit於隨身系統。</p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<h2>W6</h2>
<h4><b>因應疫情的影響，後續可能需要改由線上教學，須自行準備web cam</b></h4>
<h2>W7</h2>
<h4>Youtube live+OBS串流、Google meet 線上教學 小組網站建立、使用SSH推送更新網頁</h4>
<h2>W8</h2>
<h4>組長與老師開會，組員透過live streaming觀看討論過程。</h4>
<h2>W9~W10</h2>
<h4>Python and Flask</h4>
<h5>測試使用Python程式取出表單中學號以及對應成績</h5>
<p><img alt="" height="407" src="/images/6.png" width="448"/></p>
<h5><strong>基本Flask</strong></h5>
<p><img alt="" height="174" src="/images/7.png" width="336"/></p>
<p><strong>以此為基本再進行延伸。</strong></p>
<p></p>
<h2>W11~W13</h2>
<h2>W14</h2>
<h2>W15</h2>
<h2>W16~W17</h2>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>